#summary opis klas u¿ywanych przezz Sigma Dabster 5
= Klasy =
classes.png

Schemat najwa¿niejszych klas u¿ywanych w Dabsterze przedstawiono na powy¿szym rysunku. Ramki oznaczaj± klasy. Pogrubiona ramka oznacza klasê wirtualn±. Szerokie strza³ki oznaczaj± wska¼nik. Grot wskazuje element, którego adres jest zapamiêtywany w obiekcie, z którego prowadzi strza³ka. Przerywana linia oznacza, ¿e wska¼nik nie musi istnieæ. Pozosta³e strza³ki oznaczaj± dziedziczenie.

W projekcie przyjêto zasadê, ¿e klasy wewnêtrzne nie powinny odwo³ywaæ siê do ¿adnych kontrolek znajduj±cych siê w graficznym interfejsie u¿ytkownika GUI. Ma to maksymalnie uniezale¿niæ wewnêtrzne klasy od systemu operacyjnego i od samego GUI. Wyj±tek mog± stanowiæ komponenty umo¿liwiaj±ce np. ³±czenie siê z Internetem czy obs³ugê systemu plików, z których niektóre klasy korzystaj±.

Ponadto do niezbêdnego minimum ograniczono komunikacjê miêdzy najni¿ej po³o¿onymi klasami powy¿szej hierarchii z jakimikolwiek innymi klasami. S± one projektowane niezale¿nie, dlatego taka komunikacja stwarza³aby wiele problemów i mog³aby wp³ywaæ na sposób w jaki musia³yby dzia³aæ inne klasy z najni¿szego poziomu, co podwa¿a³oby ich niezale¿no¶æ. To niezbêdne minimum stanowi klasa prgrss, do której wska¼nik jest przechowywany w klasie item. Odwo³uj± siê do niej funkcje najni¿ej po³o¿onych klas.


== MDI Explorer ==
=== mdiXplrr ===

Bezpo¶rednio po¶redniczy pomiêdzy u¿ytkownikiem, a klasami wewnêtrznymi. ¯adna inna klasa nie powinna korzystaæ z klas wewnêtrznych.

Klasa po³±czona z obiektem. Zawiera okienko z eksploratorem i umieszczonymi na nim kontrolkami typu label (m.in. do wy¶wietlania nazw plików i innych danych) i picture (do wy¶wietlania ikonek itp.) oraz ewentualnie innymi.

Zarz±dza zdarzeniami takimi jak klikniêcia obiektu w eksploratorze prawym (menu kontekstowe z opcjami typu kopiuj, edytuj, w³a¶ciwo¶ci itp.) i lewym przyciskiem, zarówno pojedyncze (pod¶wietlenie itp.) jak i podwójne (otwieranie).

== Progress ==
=== prgrss ===

Po¶redniczy w procesie przesy³ania informacji miêdzy klasami wewnêtrznymi, a paskiem postêpu _prgProgressBar i/lub polem _lblLabel. Umo¿liwia ustawianie i pobieranie warto¶ci paska postêpu (getValue), wy¶wietlanego przy pasku tekstu (setText, getText) oraz warto¶ci pocz±tkowej i koñcowej paska (setStart, setStop, getStart, getStop). Mo¿liwe jest równie¿ od¶wie¿anie widoku paska postêpu (show).

== Item ==
=== item ===

Klasa wirtualna, korzeñ hierarchii klas. Po item dziedzicz± klasy folder i file. Umo¿liwia pobranie i ustawienie nazwy i rzeczywistej ¶cie¿ki obiektu (getName, getRealPath, setName, setRealPath). Zawiera wska¼nik do pojedynczego obiektu prgrss.


== Folder ==
=== folder ===

Klasa wirtualna dziedzicz±ca po klasie item. Zawiera operacje pozwalaj±ce na kopiowanie obiektów z zewn±trz do folderu (store) i wypakowywanie poza folder (extract), przenoszenie obiektów wewn±trz folderu lub zmianê ich nazwy (modify), kopiowanie obiektów wewn±trz folderu (copyInside), usuwanie obiektów (del) oraz zwracanie listy obiektów wewn±trz folderu wraz z dodatkowymi informacjami o nich (getContent).

Wszystkie te operacje mog± zostaæ wykonane nie tyko dla FB, ale równie¿ dla ca³ego DFB, po podaniu w odpowiednich parametrach ich adresów zapisanych wzglêdem folderu bazowego.


== File ==
=== file ===

Klasa wirtualna dziedzicz±ca po klasie item. Umo¿liwia edycjê plików (edit).


== Drive ==
=== drive === 

Klasa wirtualna dziedzicz±ca po klasie folder. Pozwala otrzymaæ informacje o pojemno¶ci dysku (getCapacity).